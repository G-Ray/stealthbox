server {
  listen 80;

  keepalive_requests    10;
  keepalive_timeout     60 60;
  access_log /home/box/nginx/access.proxy.log;
  error_log /home/box/nginx/error.proxy.log;

  location / {
    root /opt/pydio;
    index index.php;

    keepalive_requests    10;
    keepalive_timeout     60 60;
    access_log /home/box/nginx/access.pydio.log;
    error_log /home/box/nginx/error.pydio.log;

    client_max_body_size 512G;
    client_body_buffer_size 128k;

    rewrite ^/dashboard|^/settings|^/welcome|^/ws- /index.php last;
    if ( !-e $request_filename ) {
            # WebDAV Rewrites
            rewrite ^/shares /dav.php last;
            # Sync client
            rewrite ^/api /rest.php last;
            # External users 
            rewrite ^/user ./index.php?get_action=user_access_point last;
            # Public shares
            rewrite ^/data/public/([a-zA-Z0-9_-]+)\.php$ /data/public/share.php?hash=$1?;
    }
    rewrite ^/data/public/([a-zA-Z0-9_-]+)--([a-z]+)$ /data/public/share.php?hash=$1&lang=$2?;
    rewrite ^/data/public/([a-zA-Z0-9_-]+)$ /data/public/share.php?hash=$1?;

    # Prevent Clickjacking
    add_header X-Frame-Options "SAMEORIGIN";

    # Only allow these request methods and do not accept DELETE, SEARCH and other methods
    if ( $request_method !~ ^(GET|HEAD|POST|PROPFIND|OPTIONS)$ ) {
            return 444;
    }

    location ~* ^/(?:\.|conf|data/(?:files|personal|logs|plugins|tmp|cache)|plugins/editor.zoho/agent/files) {
            deny all;
    }
    # Enables PHP
    location ~ \.php$ {
            # for ^/(index|plugins) request_uri should be changed
            set $request_url $request_uri;
            if ( $uri ~ ^/(index|plugins) ) {
                    set $request_url /;
            }
            include fastcgi_params;
            fastcgi_param  REQUEST_URI $request_url;
            try_files $uri =404;
            fastcgi_pass unix:/var/run/php5-fpm.sock;
    }

    # Enables Caching
    location ~* \.(ico|css|js)$ {
             expires 7d;
            add_header Pragma public;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }
  }

  location /deluge {
    proxy_pass http://localhost:8112/;
    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    proxy_redirect off;
    proxy_buffering off;
    include /etc/nginx/proxy_params;
    proxy_set_header        X-Deluge-Base   "/deluge/";
  }
}